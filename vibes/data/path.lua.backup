---@class vibes.Path : vibes.Class
---@field new fun(opts: vibes.Path.Options): vibes.Path
---@field init fun(self: vibes.Path, opts: vibes.Path.Options)
---@field cells vibes.Cell[] Array of cells defining the path
---@field id string
---@field total_distance number The total distance of the path
local Path = class "vibes.path"

---@class vibes.Path.Options
---@field cells vibes.Cell[] Array of cells defining the path
---@field id string

---@param opts vibes.Path.Options
function Path:init(opts)
  validate(opts, {
    cells = "table",
    id = "string",
  })

  self.cells = opts.cells
  self.id = opts.id

  local total_distance = 0
  for i = 1, #self.cells - 1 do
    local pos1 = Position.from_cell(self.cells[i])
    local pos2 = Position.from_cell(self.cells[i + 1])
    total_distance = total_distance + pos1:sub(pos2):magnitude()
  end

  self.total_distance = total_distance
end

function Path:__tostring()
  local cells_str = ""
  for _, cell in ipairs(self.cells) do
    cells_str = string.format("%s, %s", cells_str, cell)
  end
  return string.format("Path(%s)", cells_str)
end

return Path
